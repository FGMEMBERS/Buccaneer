<?xml version="1.0"?>
<!--
************************************************************************
Blackburn Buccaneer simulation config. This files ties together 
all the components used by FGFS to represent the aircraft. Components include 
the flight data model, instrument panel, and external 3D model. Lots still relies
on the Hawker Hunter/

Ver 0.0.1



************************************************************************
-->
<PropertyList>
	<sim include="help.xml">
		<description type="string" >Blackburn Buccaneer S2(YASim)</description>
		<author type="string">Vivian Meazza, AJ MacLeod. Melchior Franz</author>
		<status type="string">alpha</status>
		<virtual-cockpit archive="y">true</virtual-cockpit>
		<flight-model>yasim</flight-model>
		<aero>buccaneer-yasim</aero>
		<fuel-fraction>1.0</fuel-fraction>
		<systems>
			<autopilot>
				<path>Aircraft/Hunter/Systems/hunter-autopilot.xml</path>
			</autopilot>
			<electrical>
				<path></path>
			</electrical>
		</systems>
		<instrumentation>
			<path>Aircraft/Buccaneer/Systems/instrumentation.xml</path>
		</instrumentation>
		<ai>
			<aircraft>
				<exhaust type="bool">false</exhaust>
			</aircraft>
		</ai>
		<submodels>
			<serviceable type="bool">true</serviceable>
			<path>Aircraft/Hunter/Models/hunter-submodels.xml</path>
		</submodels>
		<sound>
			<path>Aircraft/Buccaneer/Sounds/buccaneer-sound.xml</path>
		</sound>
		<!-- hide the 2D panel -->
		<panel>
			<visibility archive="y">false</visibility>
		</panel>
		<!-- no HUD -->
		<hud>
			<path>Huds/Default/default.xml</path>
			<visibility>false</visibility>
		</hud>
		<model>
			<path>Aircraft/Buccaneer/Models/buccaneer-model.xml</path>
		</model>
		<view n="0">
			<internal archive="y">true</internal>
			<config>
				<x-offset-m archive="y">-0.05</x-offset-m>
				<y-offset-m archive="y">1.09045</y-offset-m>
				<z-offset-m archive="y">3.99331</z-offset-m>
				<pitch-offset-deg>-20</pitch-offset-deg>
				<default-field-of-view-deg>70</default-field-of-view-deg>
			</config>
		</view>
		<view n="1">
			<config>
				<target-z-offset-m archive="y"
													 type="double">8.5</target-z-offset-m>
			</config>
		</view>
		<view n="2">
			<config>
				<target-z-offset-m archive="y"
													 type="double">8.5</target-z-offset-m>
			</config>
		</view>
		<view n="3">
			<config>
				<target-z-offset-m archive="y"
													 type="double">8.5</target-z-offset-m>
			</config>
		</view>
		<view n="4">
			<config>
				<target-z-offset-m archive="y"
													 type="double">7</target-z-offset-m>
			</config>
		</view>
		<view n="5">
			<config>
				<target-z-offset-m archive="y"
													 type="double">7</target-z-offset-m>
			</config>
		</view>
		<view n="6">
			<config>
				<target-z-offset-m archive="y"
													 type="double">7</target-z-offset-m>
			</config>
		</view>
		<view n="100">
			<name>Back Seat View</name>
			<internal archive="y">true</internal>
			<type>lookfrom</type>
			<config>
				<from-model type="bool">true</from-model>
				<ground-level-nearplane-m type="double">0.5f</ground-level-nearplane-m>
				<x-offset-m archive="y"
										type="double">0.05</x-offset-m>
				<y-offset-m archive="y"
										type="double">1.30165</y-offset-m>
				<z-offset-m archive="y"
										type="double">5.2269</z-offset-m>
				<pitch-offset-deg>-15</pitch-offset-deg>
				<default-field-of-view-deg>60</default-field-of-view-deg>
				<dynamic-view type="bool">true</dynamic-view>
			</config>
		</view>
		<view n="101">
			<name>Gun Camera View</name>
			<type>lookfrom</type>
			<internal archive="y">true</internal>
			<config>
				<from-model type="bool">true</from-model>
				<from-model-idx type="int">0</from-model-idx>
				<ground-level-nearplane-m type="double">0.01f</ground-level-nearplane-m>
				<default-field-of-view-deg type="double">30</default-field-of-view-deg>
				<pitch-offset-deg>-15</pitch-offset-deg>
				<x-offset-m archive="y">0.0</x-offset-m>
				<!--Right-->
				<y-offset-m archive="y">-0.531504</y-offset-m>
				<!--Up-->
				<z-offset-m archive="y">1.92197</z-offset-m>
				<!--Back-->
			</config>
		</view>
		<view n="97">
			<name>Model Cockpit View</name>
			<type>lookfrom</type>
			<config>
				<from-model type="bool">false</from-model>
				<from-model-idx type="int">0</from-model-idx>

				<at-model type="bool">false</at-model>
				<at-model-idx type="int">0</at-model-idx>

				<eye-lat-deg-path>/sim/viewer/eye/latitude-deg</eye-lat-deg-path>
				<eye-lon-deg-path>/sim/viewer/eye/longitude-deg</eye-lon-deg-path>
				<eye-alt-ft-path>/sim/viewer/eye/altitude-ft</eye-alt-ft-path>
				<eye-heading-deg-path>/sim/viewer/eye/heading-deg</eye-heading-deg-path>
				<eye-pitch-deg-path>/sim/viewer/eye/pitch-deg</eye-pitch-deg-path>
				<eye-roll-deg-path>/sim/viewer/eye/roll-deg</eye-roll-deg-path>

				<ground-level-nearplane-m type="double">0.2f</ground-level-nearplane-m>
				<default-field-of-view-deg type="double">65.0</default-field-of-view-deg>

				<x-offset-m type="double">0</x-offset-m>
				<y-offset-m type="double">0</y-offset-m>
				<z-offset-m type="double">0</z-offset-m>
				<heading-offset-deg>0</heading-offset-deg>
				<pitch-offset-deg>0</pitch-offset-deg>
				<roll-offset-deg>0</roll-offset-deg>
			</config>
		</view>
		<view n="98">
			<name>Model View</name>
			<type>lookat</type>
			<config>
				<from-model type="bool">false</from-model>
				<from-model-idx type="int">0</from-model-idx>
				<eye-lat-deg-path>/sim/viewer/eye/latitude-deg</eye-lat-deg-path>
				<eye-lon-deg-path>/sim/viewer/eye/longitude-deg</eye-lon-deg-path>
				<eye-alt-ft-path>/sim/viewer/eye/altitude-ft</eye-alt-ft-path>
				<eye-heading-deg-path>/sim/viewer/eye/heading-deg</eye-heading-deg-path>
				<eye-pitch-deg-path>/sim/viewer/eye/pitch-deg</eye-pitch-deg-path>
				<eye-roll-deg-path>/sim/viewer/eye/roll-deg</eye-roll-deg-path>
				<at-model type="bool">false</at-model>
				<at-model-idx type="int">0</at-model-idx>
				<target-lat-deg-path>/sim/viewer/target/latitude-deg</target-lat-deg-path>
				<target-lon-deg-path>/sim/viewer/target/longitude-deg</target-lon-deg-path>
				<target-alt-ft-path>/sim/viewer/target/altitude-ft</target-alt-ft-path>
				<target-heading-deg-path>/sim/viewer/target/heading-deg</target-heading-deg-path>
				<target-pitch-deg-path>/sim/viewer/target/pitch-deg</target-pitch-deg-path>
				<target-roll-deg-path>/sim/viewer/target/roll-deg</target-roll-deg-path>
				<target-x-offset-m type="double">0</target-x-offset-m>
				<target-y-offset-m type="double">0</target-y-offset-m>
				<target-z-offset-m type="double">0</target-z-offset-m>
				<ground-level-nearplane-m type="double">0.5f</ground-level-nearplane-m>
				<default-field-of-view-deg type="double">55.0</default-field-of-view-deg>
				<x-offset-m type="double">0</x-offset-m>
				<y-offset-m type="double">0</y-offset-m>
				<z-offset-m type="double">100</z-offset-m>
				<heading-offset-deg>0</heading-offset-deg>
				<pitch-offset-deg>0</pitch-offset-deg>
				<roll-offset-deg>0</roll-offset-deg>
			</config>
		</view>

		<viewer>
			<eye>
				<latitude-deg type="double">0</latitude-deg>
				<longitude-deg type="double">0</longitude-deg>
				<altitude-ft type="double">0</altitude-ft>
				<heading-deg type="double">0</heading-deg>
				<pitch-deg type="double">0</pitch-deg>
				<roll-deg type="double">0</roll-deg>
			</eye>
			<target>
				<latitude-deg type="double">0</latitude-deg>
				<longitude-deg type="double">0</longitude-deg>
				<altitude-ft type="double">0</altitude-ft>
				<heading-deg type="double">0</heading-deg>
				<pitch-deg type="double">0</pitch-deg>
				<roll-deg type="double">0</roll-deg>
			</target>
		</viewer>

		<flaps>
			<setting>0.00</setting>
			<setting>0.25</setting>
			<setting>0.5</setting>
			<setting>0.75</setting>
			<setting>1.00</setting>
		</flaps>
		<aileron-droop>
			<setting>0.00</setting>
			<setting>0.1667</setting>
			<setting>0.3333</setting>
			<setting>0.5</setting>
			<setting>0.6667</setting>
			<setting>0.8333</setting>
			<setting>0.8333</setting>
		</aileron-droop>
		<airbrake>
			<setting>0.00</setting>
			<setting>0.25</setting>
			<setting>0.5</setting>
			<setting>0.75</setting>
			<setting>1.00</setting>
		</airbrake>

		<aoa-indexer>
			<too-slow-deg>8.7</too-slow-deg>
			<slow-deg>6.7</slow-deg>
			<fast-deg>4.7</fast-deg>
			<too-fast-deg>2.7</too-fast-deg>
			<bug>0</bug>
			<bug>-50</bug>
		</aoa-indexer>

		<livery>
			<variant type="string">Side No 322</variant>
		</livery>

	</sim>

	<consumables>
		<fuel>
			<tank n="0">
				<name type="string">#1</name>
				<selected type="bool">1</selected>
			</tank>
			<tank n="1">
				<name type="string">#2</name>
				<selected type="bool">1</selected>
			</tank>
			<tank n="2">
				<name type="string">#3</name>
				<selected type="bool">1</selected>
			</tank>
			<tank n="3">
				<name type="string">#4</name>
				<selected type="bool">1</selected>
			</tank>
			<tank n="4">
				<name type="string">#5</name>
				<selected type="bool">1</selected>
			</tank>
			<tank n="5">
				<name type="string">#6</name>
				<selected type="bool">1</selected>
			</tank>
			<tank n="6">
				<name type="string">#7</name>
				<selected type="bool">1</selected>
			</tank>
			<tank n="7">
				<name type="string">#8</name>
				<selected type="bool">1</selected>
			</tank>
			<tank n="8">
				<name type="string">Prop Port</name>
				<selected type="bool">1</selected>
			</tank>
			<tank n="9">
				<name type="string">Prop Stbd</name>
				<selected type="bool">1</selected>
			</tank>
			<tank n="10">
				<name type="string">Recup Port</name>
				<selected type="bool">0</selected>
			</tank>
			<tank n="11">
				<name type="string">Recup Stbd</name>
				<selected type="bool">0</selected>
			</tank>
		</fuel>
	</consumables>

	<!-- *************** set properties **********************-->
	<!--parking brake ON -->
	<!-- nosewheel lock OFF -->
	<controls>
		<gear>
			<brake-parking>1</brake-parking>
			<tailwheel-lock>false</tailwheel-lock>
		</gear>
		<flight>
			<flaps-alternate-extension type="double">1</flaps-alternate-extension>
			<aileron-droop type="double">0</aileron-droop>
			<tail-flaps type="double">0</tail-flaps>
		</flight>
		<lighting>
			<nav-lights>false</nav-lights>
		</lighting>
	</controls>

	<engines>
		<engine>
			<smoking type="bool">true</smoking>
		</engine>
	</engines>

	<!-- hsi heading bug and source select-->
	<instrumentation>
		<heading-indicator>
			<heading-bug-deg type="double">95</heading-bug-deg>
			<heading-source type="bool">true</heading-source>
		</heading-indicator>

	</instrumentation>
	<!-- map keyboard input -->
	<input>
		<keyboard include="../../Input/Keyboard/carrier-bindings.xml">
			<!-- map keys for airbrake interlock -->
			<key n="2">
				<name>Ctrl-B</name>
				<desc>Toggle speedbrake.</desc>
				<binding>
					<command>property-toggle</command>
					<property>/controls/flight/speedbrake</property>
				</binding>
			</key>
			<!-- map keys for emergency flap lowering -->
			<key n="6">
				<name>Ctrl-F</name>
				<desc>Emergency Flap Lowering.</desc>
				<binding>
					<command>property-assign</command>
					<property>/controls/flight/flaps-alternate-extension</property>
					<value type="double">0</value>
				</binding>
				<binding>
					<command>property-assign</command>
					<property>/controls/flight/flaps</property>
					<value type="double">1</value>
				</binding>
			</key>
			<!-- map keys for arrester hook -->
			<key n="79">
				<name>O</name>
				<desc>Hook down.</desc>
				<binding>
					<command>property-assign</command>
					<property>controls/gear/tailhook</property>
					<value type="double">1.0</value>
				</binding>
			</key>
			<key n="111">
				<name>o</name>
				<desc>Hook Up.</desc>
				<binding>
					<command>property-assign</command>
					<property>controls/gear/tailhook</property>
					<value type="double">0.0</value>
				</binding>
			</key>
			<!-- map keys for wing fold -->
			<key n="70">
				<name>F</name>
				<desc>Wing Fold Down/Canopy Close.</desc>
				<binding>
					<command>property-assign</command>
					<property>/controls/flight/wing-fold</property>
					<value type="bool">1.0</value>
				</binding>
			</key>
			<key n="102">
				<name>f</name>
				<desc>Wing Fold Up/Canopy Open.</desc>
				<binding>
					<command>property-assign</command>
					<property>/controls/flight/wing-fold</property>
					<value type="bool">0.0</value>
				</binding>
			</key>
			<!-- map keys for no action  -->
			<!--<key n="107">
				<name>k</name>
				<desc>Null.</desc>
				<binding>
					<command>property-assign</command>
					<property>null</property>
					<value type="double">0</value>
				</binding>
			</key>-->
			<!-- map keys for seat vertical adjust -->
			<key n="21">
				<name>CTRL-U</name>
				<desc>Seat Default.</desc>
				<binding>
					<command>property-assign</command>
					<property>/controls/seat/vertical-adjust</property>
					<value type="double">0</value>
				</binding>
				<binding>
					<condition>
						<equals>
							<property>sim/current-view/view-number</property>
							<value>0</value>
						</equals>
					</condition>
					<command>property-assign</command>
					<property>sim/current-view/y-offset-m</property>
					<value type="double">0.7839</value>
				</binding>
			</key>
			<key n="85">
				<name>U</name>
				<desc>Seat Down.</desc>
				<binding>
					<command>property-adjust</command>
					<property>/controls/seat/vertical-adjust</property>
					<step type="double">-0.01</step>
					<min type="double">-0.05</min>
					<max type="double">0.05</max>
				</binding>
				<binding>
					<condition>
						<equals>
							<property>sim/current-view/view-number</property>
							<value>0</value>
						</equals>
					</condition>
					<command>property-adjust</command>
					<property>sim/current-view/y-offset-m</property>
					<step type="double">-0.01</step>
					<min type="double">0.7339</min>
					<max type="double">0.8339</max>
				</binding>
			</key>
			<key n="117">
				<name>u</name>
				<desc>Seat Up.</desc>
				<binding>
					<command>property-adjust</command>
					<property>controls/seat/vertical-adjust</property>
					<step type="double">0.01</step>
					<min type="double">-0.05</min>
					<max type="double">0.05</max>
				</binding>
				<binding>
					<condition>
						<equals>
							<property>sim/current-view/view-number</property>
							<value>0</value>
						</equals>
					</condition>
					<command>property-adjust</command>
					<property>sim/current-view/y-offset-m</property>
					<step type="double">0.01</step>
					<min type="double">0.75</min>
					<max type="double">0.85</max>
				</binding>
			</key>
			<!-- map keys for 10 deg flap steps -->
			<key n="91">
				<name>[</name>

				<desc>Increase flap lever.</desc>
				<binding>
					<command>nasal</command>
					<script>
						controls.flapsDown(1)
					</script>
				</binding>
				<mod-up>
					<binding>
						<command>nasal</command>
						<script>controls.flapsDown(0)</script>
					</binding>
				</mod-up>

			</key>
			<key n="93">
				<name>]</name>
				<desc>Increase aileron droop.</desc>
				<binding>
					<command>nasal</command>
					<script>
						controls.stepProps("/controls/flight/aileron-droop","/sim/aileron-droop", 1);
					</script>
				</binding>
				<mod-up>
					<binding>
						<command>nasal</command>
						<script>
							controls.stepProps("/controls/flight/aileron-droop","/sim/aileron-droop", 0);
						</script>
					</binding>
				</mod-up>

			</key>
			<key n="123">
				<name>{</name>
				<desc>Decrease flap lever.</desc>
				<binding>
					<command>nasal</command>
					<script>
						controls.flapsDown(-1)
					</script>
				</binding>
				<mod-up>
					<binding>
						<command>nasal</command>
						<script>controls.flapsDown(0)</script>
					</binding>
				</mod-up>
			</key>
			<key n="125">
				<name>}</name>
				<desc>Decrease aileron droop.</desc>
				<binding>
					<command>nasal</command>
					<script>
						controls.stepProps("/controls/flight/aileron-droop","/sim/aileron-droop", -1);
					</script>
				</binding>
				<mod-up>
					<binding>
						<command>nasal</command>
						<script>controls.stepProps("/controls/flight/aileron-droop","/sim/aileron-droop",0);</script>
					</binding>
				</mod-up>
			</key>
			<!-- map keys for jettison stores  -->
			<!-- not used right now -->
			<key n="74">
				<name>J</name>
				<desc>Jettison Outer Pylon Stores.</desc>
			</key>
			<key n="106">
				<name>j</name>
				<desc>Decrease airbrake.</desc>
				<binding>
					<command>nasal</command>
					<script>controls.stepProps("/controls/flight/speedbrake","/sim/airbrake",-1);</script>
				</binding>
				<mod-up>
					<binding>
						<command>nasal</command>
						<script>controls.stepProps("/controls/flight/speedbrake","/sim/airbrake",0);</script>
					</binding>
				</mod-up>
			</key>
			<key n="107">
				<name>k</name>
				<desc>Increase airbrake.</desc>
				<binding>
					<command>nasal</command>
					<script>controls.stepProps("/controls/flight/speedbrake","/sim/airbrake",1);</script>
				</binding>
				<mod-up>
					<binding>
						<command>nasal</command>
						<script>controls.stepProps("/controls/flight/speedbrake","/sim/airbrake",0);</script>
					</binding>
				</mod-up>
			</key>

			<key n="10">
				<name>Ctrl-J</name>
				<desc>Jettison Inner and Outer Pylon Stores.</desc>
				<!-- port inner -->
				<binding>
					<command>property-assign</command>
					<property>/controls/armament/station[0]/jettison-all</property>
					<value type="bool">1</value>
				</binding>
				<!--<binding>
					<command>property-assign</command>
					<property>/yasim/weights/tank-100gal-lbs[0]</property>
					<value type="double">0.0</value>
				</binding>-->
				<binding>
					<command>property-assign</command>
					<property>controls/armament/station[1]/jettison-all</property>
					<value type="bool">1</value>
				</binding>
				<!--<binding>
					<command>property-assign</command>
					<property>/yasim/weights/tank-100gal-lbs[1]</property>
					<value type="double">0.0</value>
				</binding>-->
			</key>
			<!-- Livery Box -->
			<key n="108">
				<name>l</name>
				<desc>Show livery select dialog</desc>
				<binding>
					<command>nasal</command>
					<script>aircraft.livery.dialog.toggle()</script>
				</binding>
			</key>
			<key n="81">
				<name>Q</name>
				<desc>Switch to previous model</desc>
				<binding>
					<command>nasal</command>
					<script>globals["model-view"].model_view_handler.next(-1)</script>
				</binding>
			</key>
			<key n="113">
				<name>q</name>
				<desc>Switch to next model</desc>
				- <binding>
					<command>nasal</command>
					<script>globals["model-view"].model_view_handler.next(1)</script>
				</binding>
			</key>
		</keyboard>
	</input>

	<yasim>
		<weights>
			<pilot-lb type="double">200</pilot-lb>
			<!--<tank-100gal-lbs type="double">170</tank-100gal-lbs>
			<tank-100gal-lbs type="double">170</tank-100gal-lbs>-->
		</weights>
	</yasim>

	<!-- nasal stuff -->
	<nasal>
		<buccaneer>
			<file>Aircraft/Buccaneer/Models/buccaneer-utils.nas</file>
			<file>Aircraft/Buccaneer/Systems/fuel-system.nas</file>
		</buccaneer>
		<!--<seavixen-instrumentation>
			<file>Aircraft/SeaVixen/Systems/instrumentation.nas</file>
		</seavixen-instrumentation>-->
		<seavixen-electrical>
			<file>Aircraft/SeaVixen/Systems/seavixen-electrical.nas</file>
		</seavixen-electrical>
		<gunview>
			<file>Aircraft/Buccaneer/Models/gunview.nas</file>
		</gunview>

		<model-view>
			<!--<file>Aircraft/Buccaneer/Models/modelview.nas</file>-->
			<script>
			var model_view_handler = {
			init : func {
			me.models = {};
			me.list = [];
			me.current = 0;
			me.active = 0;
			},
			start : func {
			me.models = {};
			var ai = props.globals.getNode("/ai/models", 1);
			foreach (var m; [props.globals]
			~ ai.getChildren("aircraft")
			~ ai.getChildren("carrier")
			~ ai.getChildren("multiplayer")
			~ ai.getChildren("tanker"))
			me.models[m.getPath()] = m;

			me.lnr = [];
			append(me.lnr, setlistener("/ai/models/model-added", func(n) {
			var m = props.globals.getNode(n.getValue(), 1);
			me.models[m.getPath()] = m;
			}));
			append(me.lnr, setlistener("/ai/models/model-removed", func(n) {
			var m = props.globals.getNode(n.getValue(), 1);
			delete(me.models, m.getPath());
			}));
			append(me.lnr, setlistener("/devices/status/mice/mouse/mode", func(n) {
			me.mouse_mode = n.getValue();
			}, 1));
			append(me.lnr, setlistener("/devices/status/mice/mouse/button", func(n) {
			me.mouse_button = n.getValue();
			if (me.mouse_button == 1)
			me.mouse_start = me.mouse_y;
			}, 1));
			append(me.lnr, setlistener("/devices/status/mice/mouse/y", func(n) {
			me.mouse_y = n.getValue();
			}, 1));
			me.offs = 0;
			me.active = 1;
			me.reset();
			},
			update : func {
			if (me.mouse_mode == 0 and me.mouse_button) {
			var curr = getprop("/sim/current-view/z-offset-m") - me.offs;
			me.offs += me.mouse_y - me.mouse_start;
			var new = curr + me.offs;
			if (new &lt; 1)
			new = 1;
			setprop("/sim/current-view/z-offset-m", new);
			me.mouse_start = me.mouse_y;
			}
			return 0;
			},
			stop : func {
			me.active = 0;
			foreach (var listener; me.lnr)
			removelistener(listener);
			},
			reset : func {
			me.next(me.current = 0);
			},
			next : func(v) {
			if (!me.active or !size(me.models))
			return;
			if (v)
			me.current += v;
			else
			me.current = 0;

			me.list = sort(keys(me.models), cmp);
			if (me.current &lt; 0)
			me.current = size(me.list) - 1;
			elsif (me.current >= size(me.list))
			me.current = 0;

			var s = "/sim/view[98]/config";
			var c = me.list[me.current];
			setprop(s, "eye-lat-deg-path", c ~ "/position/latitude-deg");
			setprop(s, "eye-lon-deg-path", c ~ "/position/longitude-deg");
			setprop(s, "eye-alt-ft-path", c ~ "/position/altitude-ft");

			setprop(s, "target-lat-deg-path", c ~ "/position/latitude-deg");
			setprop(s, "target-lon-deg-path", c ~ "/position/longitude-deg");
			setprop(s, "target-alt-ft-path", c ~ "/position/altitude-ft");

			var s = "/sim/view[97]/config";
			setprop(s, "eye-lat-deg-path", c ~ "/position/latitude-deg");
			setprop(s, "eye-lon-deg-path", c ~ "/position/longitude-deg");
			setprop(s, "eye-alt-ft-path", c ~ "/position/altitude-ft");
			setprop(s, "eye-heading-deg-path", c ~ "/orientation/true-heading-deg");
			setprop(s, "eye-pitch-deg-path", c ~ "/orientation/pitch-deg");
			setprop(s, "eye-roll-deg-path", c ~ "/orientation/roll-deg");

			var n = me.models[me.list[me.current]];
			var type = n.getName();
			var name = nil;
			if (type == "") {
			var z = getprop("/sim/chase-distance-m");
			if (name = getprop("/sim/multiplay/callsign"))
			name = 'callsign "' ~ name ~ '"';
			} else {
			var z = type == "carrier" ? 350 : 70;
			if ((name = n.getNode("callsign")) != nil and (name = name.getValue()))
			name = 'callsign "' ~ name ~ '"';
			elsif ((name = n.getNode("name")) != nil and (name = name.getValue()))
			name = n.getName() ~ ' "' ~ name ~ '"';
			else
			name = n.getName() ~ " " ~ n.getIndex();
			}
			var color = {};
			if (type != "multiplayer")
			color = { text: { color: { red: 0.5, green: 0.8, blue: 0.5 }}};
			if (getprop("/sim/current-view/view-number") == 98)
			setprop("/sim/current-view/z-offset-m", me.offs = z);
			if (name)
			gui.popupTip(name, 2, color);
			},
			};

			setlistener("/sim/signals/fdm-initialized", func {
			view.manager.register("Model View", model_view_handler);
			view.manager.register("Model Cockpit View", model_view_handler);
			});
			</script>
		</model-view>

	</nasal>

	<environment>
		<params>
			<contrail-altitude type="double">50000</contrail-altitude>
		</params>
	</environment>


</PropertyList>
